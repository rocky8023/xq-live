<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ZanMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.Zan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="act_id" jdbcType="BIGINT" property="actId" />
    <result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, is_deleted, act_id, merchant_id, user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.xq.live.model.ZanKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zan
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = #{isDeleted,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xq.live.model.ZanKey">
    delete from zan
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = #{isDeleted,jdbcType=TINYINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.Zan">
    insert into zan (id, is_deleted, act_id, 
      merchant_id, user_id, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{isDeleted,jdbcType=TINYINT}, #{actId,jdbcType=BIGINT}, 
      #{merchantId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.Zan">
    insert into zan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.Zan">
    update zan
    <set>
      <if test="actId != null">
        act_id = #{actId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = #{isDeleted,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.Zan">
    update zan
    set act_id = #{actId,jdbcType=BIGINT},
      merchant_id = #{merchantId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = #{isDeleted,jdbcType=TINYINT}
  </update>
</mapper>